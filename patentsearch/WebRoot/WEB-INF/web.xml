<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" 
	xmlns="http://java.sun.com/xml/ns/javaee" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
	http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
	<context-param>
	   <param-name>contextConfigLocation</param-name>
	   <param-value>classpath:beans.xml</param-value>
	</context-param>
	<!-- 对Spring容器进行实例化 -->
	<listener>
	      <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	
	
    
   <filter>
  		<filter-name>privilegeFilter</filter-name> 
  		<filter-class>patentsearch.web.filter.PrivilegeFilter</filter-class> 
   </filter> 
   <filter-mapping>
  		<filter-name>privilegeFilter</filter-name> 
 		<url-pattern>/front/search/*</url-pattern> 
   </filter-mapping>
    <!-- 权限过滤器
    <filter>
  		<filter-name>controlPrivilegeFilter</filter-name> 
  		<filter-class>patent.web.filter.ControlPrivilegeFilter</filter-class> 
   </filter>
   <filter-mapping>
  		<filter-name>controlPrivilegeFilter</filter-name> 
 		<url-pattern>/control/*</url-pattern> 
   </filter-mapping>-->
   <!-- 解决延时加载问题 -->
	<filter>
        <filter-name>Spring OpenEntityManagerInViewFilter</filter-name>
        <filter-class>org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter</filter-class>
   		<init-param>
   		<!-- 指定org.springframework.orm.jpa.LocalEntityManagerFactoryBean在spring配置文件中的名称,默认值为entityManagerFactory
   		如果LocalEntityManagerFactoryBean在spring中的名称不是entityManagerFactory,该参数一定要指定,否则会出现找不到entityManagerFactory的例外 -->
			<param-name>entityManagerFactoryBeanName</param-name>
			<param-value>entityManagerFactory</param-value>
		</init-param>	
    </filter>
    <filter-mapping>
        <filter-name>Spring OpenEntityManagerInViewFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <!-- 对struts2容器进行实例化 -->
	<filter>
  		<filter-name>struts2</filter-name> 
  		<filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter</filter-class> 
   </filter>
   <filter-mapping>
  		<filter-name>struts2</filter-name> 
 		<url-pattern>/*</url-pattern> 
   </filter-mapping>
   <!-- 设置字符集过滤器-->
   <filter>
		<filter-name>codeFilter</filter-name> 
  		<filter-class>patentsearch.web.filter.SetCodeFilter</filter-class> 
	</filter>
	 <filter-mapping>
  		<filter-name>codeFilter</filter-name> 
 		<url-pattern>/*</url-pattern> 
   </filter-mapping>
  
   <!-- 定时器 -->
   <context-param>
         <param-name>quartz:config-file</param-name>
         <param-value>classpath:quartz.properties</param-value>
     </context-param>
     <context-param>
         <param-name>quartz:shutdown-on-unload</param-name>
         <param-value>true</param-value>
     </context-param>
     <context-param>
         <param-name>quartz:wait-on-shutdown</param-name>
         <param-value>true</param-value>
     </context-param>
     <context-param>
         <param-name>quartz:start-scheduler-on-load</param-name>
         <param-value>true</param-value>
     </context-param>
     
     <servlet> 
        <servlet-name>QuartzInitializer</servlet-name> 
        <servlet-class>org.quartz.ee.servlet.QuartzInitializerServlet</servlet-class> 
        <init-param>
            <param-name>shutdown-on-unload</param-name>
            <param-value>true</param-value>
        </init-param>
        <load-on-startup>2</load-on-startup>
    </servlet>
  <welcome-file-list>
    <welcome-file>index.jsp</welcome-file>
  </welcome-file-list>
</web-app>
